buildscript {
    repositories {
        mavenCentral()
        maven { url 'http://download.crashlytics.com/maven' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.12.+'
        classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.+'
    }
}

// Manifest version information!
def versionMajor = 2
def versionMinor = 3
def versionPatch = 0
def versionBuild = 0 // bump for dogfood builds, public betas, etc.

def currentDate = (int) (System.currentTimeMillis() / (1000 * 60 * 60 * 24))
def moduloDate = currentDate % 1000

apply plugin: 'com.android.application'
apply plugin: 'crashlytics'
apply plugin: 'robolectric'

repositories {
    maven { url "http://dl.bintray.com/populov/maven" }
    mavenCentral()
    maven { url 'http://download.crashlytics.com/maven' }
    maven { url "https://github.com/dahlgren/pulltorefresh-aar/raw/master" }
    maven { url 'http://clinker.47deg.com/nexus/content/groups/public' }
    maven { url 'https://github.com/TradeHero/TH_MAVEN/raw/master' }
}

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))

def isTravis = "true".equals(System.getenv("TRAVIS"))
def preDexEnabled = "true".equals(System.getProperty("pre-dex", "true"))

android {
    compileSdkVersion 19
    buildToolsVersion "19.1.0"
    useOldManifestMerger=true

    dexOptions {
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !isTravis
        // TODO is this really necessary?
        jumboMode = true
    }

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19

        versionCode moduloDate * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
        buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    signingConfigs {
        release {
        }
    }

    buildTypes {
        debug {
            // versionNameSuffix interferes with the version the server receives
//            applicationIdSuffix '.dev'
//            versionNameSuffix '-dev'
        }
        release {
            runProguard true
            proguardFiles 'proguard/proguard-android.txt'
            signingConfig signingConfigs.release
        }
    }

    // There may be further flavorGroups dimensions in the future
    flavorGroups "marketSegment"

    productFlavors {
        googleplay {
            flavorGroup "marketSegment"
        }
        china {
            flavorGroup "marketSegment"
        }
        samsung {
            flavorGroup "marketSegment"
        }
    }

    sourceSets {
        main {
            manifest {
                srcFile 'AndroidManifest.xml'
            }
            java {
                srcDir 'src/main/java'
            }
            aidl {
                srcDir 'src/main/java'
            }
            res {
                srcDir 'res'
            }
            assets {
                srcDir 'assets'
            }
        }

        debug {
            java {
                srcDir 'src/debug/java'
            }
        }

        //region Flavours
        googleplay {
            manifest {
                srcFile 'src/googleplay/AndroidManifest.xml'
                srcFile 'src/samsung/AndroidManifest.xml'
            }
            java {
                srcDir 'src/googleplay/java'
                // TODO remove samsung when files properly moved, and xav/iap merged in.
                srcDir 'src/samsung/java'
            }
        }

        china {
            manifest {
                srcFile 'src/china/AndroidManifest.xml'
            }
            java {
                srcDir 'src/china/java'
            }
        }

        samsung {
            manifest {
                srcFile 'src/samsung/AndroidManifest.xml'
            }
            java {
                srcDir 'src/samsung/java'
            }
        }
        //endregion

        // TODO make sure this is not breaking
        androidTest.setRoot('src/test')

        androidTest {
            java {
                srcDir 'src/china/java'
                srcDir 'src/googleplay/java'
                srcDir 'src/debug/java'
                srcDir 'src/test/java'
            }
            resources {
                srcDir 'src/test/resources'
            }
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    chinaCompile fileTree(dir: 'libs/baidu', include: ['*.jar'])

    compile project(':ResideMenu')
    // TODO change to samsungCompile when properly separated
    compile project(':samsung_iap')
    compile project(':facebook-android-sdk:facebook')

    compile ('com.actionbarsherlock:actionbarsherlock:4.4.0@aar') {
        exclude group: 'com.google.android', module: 'support-v4'
    }
    compile 'com.android.support:support-v4:19.1.0'
    compile ('com.github.chrisbanes.pulltorefresh:library:2.1.2-SNAPSHOT@aar') {
        exclude group: 'commons-codec', module: 'android'
        // exclude group: 'com.android.support', module: 'appcompat-v7'
    }
    compile ('com.viewpagerindicator:library:2.4.1@aar') {
        exclude group: 'com.google.android', module: 'support-v4'
    }
    compile ('se.emilsjolander:stickylistheaders:2.4.1@aar') {
        exclude group: 'com.google.android', module: 'support-v4'
    }
    compile ('com.fortysevendeg.swipelistview:swipelistview:1.0-SNAPSHOT@aar') {
        exclude group: 'com.nineoldandroids', module: 'library'
        // exclude group: 'com.android.support', module: 'appcompat-v7'
    }

    compile ('com.squareup.picasso:picasso:2.3.3') {
        exclude group: "com.squareup.okhttp", module: "okhttp"
        exclude group: "com.squareup.okhttp", module: "okhttp-urlconnection"
    }
    compile 'com.squareup.okhttp:okhttp:2.0.0'
    compile ('com.squareup.okhttp:okhttp-urlconnection:2.0.0') {
        exclude group: "com.squareup.okhttp", module: "okhttp"
    }
    compile ('com.squareup.retrofit:retrofit:1.6.1') {
        exclude module: 'gson'
    }
    compile ('com.squareup.retrofit:converter-simplexml:1.6.1') {
        exclude module: 'stax'
        exclude module: 'stax-api'
        exclude module: 'xpp3'
        exclude group: 'com.squareup.retrofit', module: 'retrofit'
    }
    compile 'com.squareup.dagger:dagger:1.2.1'
    provided 'com.squareup.dagger:dagger-compiler:1.2.1'

    compile 'com.jakewharton.timber:timber:2.2.2'
    compile 'com.urbanairship:urbanairship-lib:3.2.1'

    compile 'com.fasterxml.jackson.core:jackson-databind:2.4.0'
    // TODO remove after DiskLruMemCache is removed
    compile 'com.jakewharton:disklrucache:2.0.2'

    compile 'com.tradehero.route:route:0.2-SNAPSHOT'

    compile 'org.jetbrains:annotations:13.0'
    compile 'com.crashlytics.android:crashlytics:1.1.10+'

    compile ('oauth.signpost:signpost-core:1.2.1.2') {
        exclude group: 'commons-codec', module: 'commons-codec'
    }
    compile ('oauth.signpost:signpost-commonshttp4:1.2.1.2') {
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'commons-codec', module: 'commons-codec'
        exclude group: 'org.apache.httpcomponents', module: 'httpcore'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
    compile 'org.twitter4j:twitter4j-core:3.0+'

    compile ('com.localytics.android:library:2.19.0') {
        exclude group: 'com.google.android', module: 'support-v4'
    }

    compile 'org.ocpsoft.prettytime:prettytime:3.2.1.Final'
    compile 'com.jakewharton:butterknife:4.0.1'

    // For Test
    androidTestCompile 'junit:junit:4.10'
    androidTestCompile 'org.robolectric:robolectric:2.3'
    androidTestCompile 'org.easytesting:fest-assert-core:2.0M10'
    androidTestCompile 'org.mockito:mockito-core:1.9.5'

    androidTestCompile 'org.apache.commons:commons-lang3:3.1'
    androidTestCompile 'org.apache.commons:commons-io:1.3.2'
}

File propFile = file('signing.properties');
if (propFile.exists()) {
    def Properties props = new Properties()
    props.load(new FileInputStream(propFile))

    if (props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        android.buildTypes.release.signingConfig = null
    }
} else {
    android.buildTypes.release.signingConfig = null
}